services:
  #auth stack
  auth-db:
    image: "postgres:latest"
    restart: always
    ports:
      - 5441:5432
    environment:
      - POSTGRES_PASSWORD=123w
  auth-cache:
    image: "redis:latest"
    restart: always
    ports:
      - 6380:6379
  auth-api:
    build:
      context: Gb.AuthService
      # dockerfile: Gb.AuthService/Dockerfile
    ports:
      - 8180:8080
      - 8181:8081
    environment:
      - "PG_CONNECT=Host=auth-db;Database=usersdb;Username=postgres;Password=123w;"
      - REDIS_CONNECT=auth-cache
    restart: always
    depends_on:
      - auth-cache
      - auth-db

  # events stack
  events-db:
    image: "postgres:latest"
    restart: always
    ports:
      - 5440:5432
    environment:
      - POSTGRES_PASSWORD=123w
  events-s3-db:
    image: minio/minio:latest
    restart: always
    ports:
      - 9002:9000
      - 9003:9001 # minIO dashboard
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9003"
  events-api:
    build:
      context: Gb.EventsService
      # dockerfile: Gb.EventsService/Dockerfile
    environment:
      - PG_CONNECT=Host=events-db;Database=eventsdb;Username=postgres;Password=123w;
      - REDIS_CONNECT=refresh-token-cache
      - MinIOSettings__Endpoint=events-s3-db:9000
      - MinIOSettings__AccessKey=minioadmin
      - MinIOSettings__SecretKey=minioadmin
      - MinIOSettings__BucketName=events-images
      - MinIOSettings__UseSSL=false
    restart: always
    ports:
      - 8182:8080
      - 8183:8081
    depends_on:
      - events-db
      - events-s3-db

volumes:
  minio-data:
